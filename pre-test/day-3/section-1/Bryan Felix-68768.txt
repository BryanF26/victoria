1. A 
2. B 
3. C 
4. TRUE 
5. B 
6. C 
7. TRUE
8. C 
9. C 
10. A 
11. B 
12. TRUE 
13. D 
14. C 
15. A 
16. TRUE
17. A
18. A 
19. TRUE 
20. D 
21. B 
22. C 
23. A 
24. D 
25. TURE 
26. A 
27. D 
28. SELECT * FROM books
29. B 
30. A 
1. 
SELECT b.title, a.name AS author's_name, g.name AS genre 
FROM books b 
JOIN authors a ON b.author_id = a.id
JOIN genres g ON b.genre_id = g.id
WHERE g.name in ('Mystery', 'Thriller')

2.
SELECT br.name, COUNT(bb.book_id) AS count_books_borrowed
FROM borrowers br
JOIN borrowed_books bb ON br.id = bb.borrower_id
GROUP BY br.name
HAVING COUNT(bb.book_id) > 5;

3.
SELECT b.title, COUNT(bb.id) AS times_borrowed
FROM books b
JOIN borrowed_books bb ON b.id = bb.book_id
GROUP BY b.title
ORDER BY times_borrowed DESC;

4.
SELECT br.name, b.title, DATEDIFF(bb.due_date, bb.borrowed_date) AS days_kept
FROM borrowed_books bb
JOIN borrowers br ON bb.borrower_id = br.id
JOIN books b ON bb.book_id = b.id
ORDER BY days_kept
LIMIT 1;

5.
SELECT b.title, a.name AS author_name
FROM books b
JOIN authors a ON b.author_id = a.id
LEFT JOIN borrowed_books bb ON b.id = bb.book_id
WHERE bb.book_id IS NULL;

6.
SELECT b.title, a.name AS author_name, g.name AS genre
FROM books b
JOIN authors a ON b.author_id = a.id
JOIN genres g ON b.genre_id = g.id
WHERE g.name IN ('Mystery', 'Thriller');

7.
SELECT g.name AS genre, AVG(DATEDIFF(bb.due_date, bb.borrowed_date)) AS avg_days_borrowed
FROM genres g
JOIN books b ON g.id = b.genre_id
JOIN borrowed_books bb ON b.id = bb.book_id
GROUP BY g.name;

8.
SELECT br.name, COUNT(bb.book_id) AS books_borrowed
FROM borrowers br
JOIN borrowed_books bb ON br.id = bb.borrower_id
GROUP BY br.name
ORDER BY books_borrowed DESC
LIMIT 3;